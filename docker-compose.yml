version: "3"

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - static:/vol/web/static
      - media:/vol/web/media
    env_file:
      - .env
    command: >
      sh -c "sleep 10;python manage.py wait_for_db && 
              python manage.py migrate &&
              gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    # python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=password
    depends_on:
      - db


  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    # command: -p 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./logs:/logs

  nginx:
    build: ./nginx
    volumes:
      - static:/vol/web/static
    ports:
      - "8080:8080"
volumes:
  postgres-data:
  static:
  media:

